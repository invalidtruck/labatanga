{"version":3,"sources":["../../src/pages/provider/prov-settings/prov-settings.module.ts","../../node_modules/@ionic-native/camera/index.js","../../src/pages/provider/prov-settings/prov-settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACG;AAUnD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QARlC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,wEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,wEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;ACZnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACjE;AACP;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AAChD;AACP;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACD;AAClB,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpQ4D;AACF;AAChB;AACqB;AACF;AAK7D;;;;;GAKG;AAOH;IAGE,0BACU,IAAyB,EACzB,MAAc,EAAU,OAA2B,EAAS,OAAsB,EAAS,SAAoB;QAD/G,SAAI,GAAJ,IAAI,CAAqB;QACzB,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAoB;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QACvH,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE;IAE1E,CAAC;IAEK,oCAAS,GAAf,UAAgB,MAAW;;;;;;wBAEnB,OAAO,GAAkB;4BAC7B,OAAO,EAAE,EAAE;4BACX,YAAY,EAAE,GAAG;4BACjB,WAAW,EAAE,GAAG;4BAChB,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;4BACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;4BAC3C,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;yBAEzC;wBACc,qBAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;;wBAA9C,MAAM,GAAG,SAAqC;wBAChD,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC/B,IAAI,GAAG,KAAK,CAAC;wBACjB,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS;4BAAE,IAAI,GAAG,KAAK;wBAC9C,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS;4BAAE,IAAI,GAAG,OAAO;wBAChD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,SAAS;4BAAE,IAAI,GAAG,MAAM;wBACjD,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS;4BAAE,IAAI,GAAG,MAAM;wBAChD,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS;4BAAE,IAAI,GAAG,KAAK;wBAIzC,KAAK,GAAG,4BAA0B,MAAQ,CAAC;wBAC3C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;wBAC7F,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;wBACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,MAAM,CAAC;4BAChE,GAAG,EAAE,QAAQ;yBACd,CAAC;;;;;KACH;IAKD,yCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IA9CU,gBAAgB;QAJ5B,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;WACG;SAClC,CAAC;gOAKgB,kEAAmB;YACjB,MAAM,EAAmB,KAA8E;OAL9G,gBAAgB,CAgD5B;IAAD,CAAC;AAAA;SAhDY,gBAAgB,gB","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ProvSettingsPage } from './prov-settings';\n\n@NgModule({\n  declarations: [\n    ProvSettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ProvSettingsPage),\n  ],\n})\nexport class ProvSettingsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/provider/prov-settings/prov-settings.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nexport var DestinationType;\n(function (DestinationType) {\n    DestinationType[DestinationType[\"DATA_URL\"] = 0] = \"DATA_URL\";\n    DestinationType[DestinationType[\"FILE_URL\"] = 1] = \"FILE_URL\";\n    DestinationType[DestinationType[\"NATIVE_URI\"] = 2] = \"NATIVE_URI\";\n})(DestinationType || (DestinationType = {}));\nexport var EncodingType;\n(function (EncodingType) {\n    EncodingType[EncodingType[\"JPEG\"] = 0] = \"JPEG\";\n    EncodingType[EncodingType[\"PNG\"] = 1] = \"PNG\";\n})(EncodingType || (EncodingType = {}));\nexport var MediaType;\n(function (MediaType) {\n    MediaType[MediaType[\"PICTURE\"] = 0] = \"PICTURE\";\n    MediaType[MediaType[\"VIDEO\"] = 1] = \"VIDEO\";\n    MediaType[MediaType[\"ALLMEDIA\"] = 2] = \"ALLMEDIA\";\n})(MediaType || (MediaType = {}));\nexport var PictureSourceType;\n(function (PictureSourceType) {\n    PictureSourceType[PictureSourceType[\"PHOTOLIBRARY\"] = 0] = \"PHOTOLIBRARY\";\n    PictureSourceType[PictureSourceType[\"CAMERA\"] = 1] = \"CAMERA\";\n    PictureSourceType[PictureSourceType[\"SAVEDPHOTOALBUM\"] = 2] = \"SAVEDPHOTOALBUM\";\n})(PictureSourceType || (PictureSourceType = {}));\nexport var PopoverArrowDirection;\n(function (PopoverArrowDirection) {\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_UP\"] = 1] = \"ARROW_UP\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_DOWN\"] = 2] = \"ARROW_DOWN\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_LEFT\"] = 3] = \"ARROW_LEFT\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_RIGHT\"] = 4] = \"ARROW_RIGHT\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_ANY\"] = 5] = \"ARROW_ANY\";\n})(PopoverArrowDirection || (PopoverArrowDirection = {}));\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"BACK\"] = 0] = \"BACK\";\n    Direction[Direction[\"FRONT\"] = 1] = \"FRONT\";\n})(Direction || (Direction = {}));\n/**\n * @name Camera\n * @description\n * Take a photo or capture video.\n *\n * Requires the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n *\n * @usage\n * ```typescript\n * import { Camera, CameraOptions } from '@ionic-native/camera';\n *\n * constructor(private camera: Camera) { }\n *\n * ...\n *\n *\n * const options: CameraOptions = {\n *   quality: 100,\n *   destinationType: this.camera.DestinationType.FILE_URI,\n *   encodingType: this.camera.EncodingType.JPEG,\n *   mediaType: this.camera.MediaType.PICTURE\n * }\n *\n * this.camera.getPicture(options).then((imageData) => {\n *  // imageData is either a base64 encoded string or a file URI\n *  // If it's base64 (DATA_URL):\n *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n * }, (err) => {\n *  // Handle error\n * });\n * ```\n * @interfaces\n * CameraOptions\n * CameraPopoverOptions\n */\nvar Camera = (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n           * Constant for possible destination types\n           */\n        _this.DestinationType = {\n            /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n            DATA_URL: 0,\n            /** Return file uri (content://media/external/images/media/2 for Android) */\n            FILE_URI: 1,\n            /** Return native uri (eg. asset-library://... for iOS) */\n            NATIVE_URI: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.EncodingType = {\n            /** Return JPEG encoded image */\n            JPEG: 0,\n            /** Return PNG encoded image */\n            PNG: 1\n        };\n        /**\n           * Convenience constant\n           */\n        _this.MediaType = {\n            /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n            PICTURE: 0,\n            /** Allow selection of video only, ONLY RETURNS URL */\n            VIDEO: 1,\n            /** Allow selection from all media types */\n            ALLMEDIA: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.PictureSourceType = {\n            /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\n            PHOTOLIBRARY: 0,\n            /** Take picture from camera */\n            CAMERA: 1,\n            /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\n            SAVEDPHOTOALBUM: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.PopoverArrowDirection = {\n            ARROW_UP: 1,\n            ARROW_DOWN: 2,\n            ARROW_LEFT: 4,\n            ARROW_RIGHT: 8,\n            ARROW_ANY: 15\n        };\n        /**\n           * Convenience constant\n           */\n        _this.Direction = {\n            /** Use the back-facing camera */\n            BACK: 0,\n            /** Use the front-facing camera */\n            FRONT: 1\n        };\n        return _this;\n    }\n    /**\n     * Take a picture or video, or load one from the library.\n     * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n     * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n     */\n    /**\n       * Take a picture or video, or load one from the library.\n       * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n       * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n       */\n    Camera.prototype.getPicture = /**\n       * Take a picture or video, or load one from the library.\n       * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n       * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n     * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n       * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n       * @returns {Promise<any>}\n       */\n    Camera.prototype.cleanup = /**\n       * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n       * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n       * @returns {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    Camera.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Camera.prototype, \"getPicture\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Camera.prototype, \"cleanup\", null);\n    /**\n     * @name Camera\n     * @description\n     * Take a photo or capture video.\n     *\n     * Requires the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n     *\n     * @usage\n     * ```typescript\n     * import { Camera, CameraOptions } from '@ionic-native/camera';\n     *\n     * constructor(private camera: Camera) { }\n     *\n     * ...\n     *\n     *\n     * const options: CameraOptions = {\n     *   quality: 100,\n     *   destinationType: this.camera.DestinationType.FILE_URI,\n     *   encodingType: this.camera.EncodingType.JPEG,\n     *   mediaType: this.camera.MediaType.PICTURE\n     * }\n     *\n     * this.camera.getPicture(options).then((imageData) => {\n     *  // imageData is either a base64 encoded string or a file URI\n     *  // If it's base64 (DATA_URL):\n     *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n     * }, (err) => {\n     *  // Handle error\n     * });\n     * ```\n     * @interfaces\n     * CameraOptions\n     * CameraPopoverOptions\n     */\n    Camera = __decorate([\n        Plugin({\n            pluginName: 'Camera',\n            plugin: 'cordova-plugin-camera',\n            pluginRef: 'navigator.camera',\n            repo: 'https://github.com/apache/cordova-plugin-camera',\n            platforms: ['Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Camera);\n    return Camera;\n}(IonicNativePlugin));\nexport { Camera };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/camera/index.js\n// module id = 577\n// module chunks = 2 3","import { Observable } from 'rxjs/Observable';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, List } from 'ionic-angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { storage, initializeApp } from 'firebase';\nimport { firebaseConfig } from \"../../../services/credentials\";\nimport { filter } from 'rxjs/operator/filter';\n\n/**\n * Generated class for the ProvSettingsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-prov-settings',\n  templateUrl: 'prov-settings.html',\n})\nexport class ProvSettingsPage {\n  Provider: Observable<any>\n  uid: String\n  constructor(\n    private afDB: AngularFireDatabase,\n    private camera: Camera, private storage: AngularFireStorage, public navCtrl: NavController, public navParams: NavParams) {\n    this.uid = navParams.data\n    this.Provider = this.afDB.object(\"Providers/\" + this.uid).valueChanges()\n    \n  }\n\n  async takePhoto(images: any) {\n\n    const options: CameraOptions = {\n      quality: 50,\n      targetHeight: 600,\n      targetWidth: 800,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      //sourceType:this.camera.PictureSourceType.PHOTOLIBRARY\n    }\n    const result = await this.camera.getPicture(options)\n    let totalimg = Object.keys(images);\n    let name = \"one\";\n    if (totalimg[\"one\"] != undefined) name = \"two\"\n    if (totalimg[\"two\"] != undefined) name = \"three\"\n    if (totalimg[\"three\"] != undefined) name = \"four\"\n    if (totalimg[\"four\"] != undefined) name = \"five\"\n    if (totalimg[\"five\"] != undefined) name = \"six\"\n\n\n\n    const image = `data:image/jpeg;base64,${result}`;\n    const task = this.storage.ref(\"providers/\" + this.uid + \"/\" + name).putString(image, 'data_url');\n    let filename = task.downloadURL()\n    this.afDB.object(\"Providers/\" + this.uid + \"/\" + \"images\").update({\n      one: filename\n    })\n  }\n\n\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ProvSettingsPage');\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/provider/prov-settings/prov-settings.ts"],"sourceRoot":""}